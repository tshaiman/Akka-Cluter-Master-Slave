
//custom-dv-dispatcher {
//  # Dispatcher is the name of the event-based dispatcher
//  type = Dispatcher
//  # What kind of ExecutionService to use
//  executor = "thread-pool-executor"
//  # Configuration for the thread pool
//  thread-pool-executor {
//    # minimum number of threads to cap factor-based core number to
//    core-pool-size-min = 8
//    # No of core threads ... ceil(available processors * factor)
//    core-pool-size-factor = 2.0
//    # maximum number of threads to cap factor-based number to
//    core-pool-size-max = 64d
//  }
//  # Throughput defines the maximum number of messages to be
//  # processed per actor before the thread jumps to the next actor.
//  # Set to 1 for as fair as possible.
//  throughput = 1000
//}

priority-mailbox {
  mailbox-type = "com.dv.akka.cluster.MyPrioMailbox"
}

akka {
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
  akka.actor.allow-java-serialization = off
  loglevel = "WARNING"
  actor {
    log-remote-lifecycle-events = off
    provider = cluster
    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    serialization-bindings {
      //"com.dv.akka.common.models.ImpressionMessage" = proto
      "com.dv.akka.ImpressionMessage" = kryo
    }
  }
  default-dispatcher {
    fork-join-executor {
      parallelism-max = 16
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      //port = 0
    }
  }


  cluster {
    #seed-nodes = ["akka.tcp://ClusterSystem@172.25.0.43:2551"]
    seed-nodes = ["akka.tcp://ClusterSystem@127.0.0.1:2551"]
    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #auto-down-unreachable-after = 10s
  }

}

//WorkerGateway cluster route
akka.actor.deployment {
  /workerRouter {
    router = balancing-pool
    nr-of-instances = 2
  }

}


# Enable metrics extension in akka-cluster-metrics.
#akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
#akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native
